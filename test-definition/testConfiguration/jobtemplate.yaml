apiVersion: tests.testkube.io/v1
kind: Template
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "-1"    
  name: job-template-worker-system  
  namespace: tks-system
spec:
  type: job
  body: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          nodeSelector:
            node-pool: worker-system
          tolerations:
            - effect: NoSchedule
              key: node-pool
              value: worker-system
          initContainers:
            - name: {{ .Name }}-init
              {{- if .Registry }}
              image: {{ .Registry }}/{{ .InitImage }}
              {{- else }}
              image: {{ .InitImage }}
              {{- end }}
              imagePullPolicy: IfNotPresent
              command:
                - "/bin/runner"
                - '{{ .Jsn }}'
              volumeMounts:
                - name: data-volume
                  mountPath: /data
              {{- if .CertificateSecret }}
              - name: {{ .CertificateSecret }}
                mountPath: /etc/certs
              {{- end }}
              {{- range $configmap := .EnvConfigMaps }}
              {{- if and $configmap.Mount $configmap.Reference }}
              - name: {{ $configmap.Reference.Name }}
                mountPath: {{ $configmap.MountPath }}
              {{- end }}
              {{- end }}
              {{- range $secret := .EnvSecrets }}
              {{- if and $secret.Mount $secret.Reference }}
              - name: {{ $secret.Reference.Name }}
                mountPath: {{ $secret.MountPath }}
              {{- end }}
              {{- end }}
          containers:
            - name: "{{ .Name }}"
              {{- if .Registry }}
              image: {{ .Registry }}/{{ .Image }}
              {{- else }}
              image: {{ .Image }}
              {{- end }}
              imagePullPolicy: IfNotPresent
              command:
                - "/bin/runner"
                - '{{ .Jsn }}'
              volumeMounts:
                - name: data-volume
                  mountPath: /data
              {{- if .CertificateSecret }}
              - name: {{ .CertificateSecret }}
                mountPath: /etc/certs
              {{- end }}
              {{- range $configmap := .EnvConfigMaps }}
              {{- if and $configmap.Mount $configmap.Reference }}
              - name: {{ $configmap.Reference.Name }}
                mountPath: {{ $configmap.MountPath }}
              {{- end }}
              {{- end }}
              {{- range $secret := .EnvSecrets }}
              {{- if and $secret.Mount $secret.Reference }}
              - name: {{ $secret.Reference.Name }}
                mountPath: {{ $secret.MountPath }}
              {{- end }}
              {{- end }}
          volumes:
            - name: data-volume
              emptyDir: {}
          {{- if .CertificateSecret }}
          - name: {{ .CertificateSecret }}
            secret:
              secretName: {{ .CertificateSecret }}
          {{- end }}
          {{- range $configmap := .EnvConfigMaps }}
          {{- if and $configmap.Mount $configmap.Reference }}
          - name: {{ $configmap.Reference.Name }}
            configmap:
              name: {{ $configmap.Reference.Name }}
          {{- end }}
          {{- end }}
          {{- range $secret := .EnvSecrets }}
          {{- if and $secret.Mount $secret.Reference }}
          - name: {{ $secret.Reference.Name }}
            secret:
              secretName: {{ $secret.Reference.Name }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          serviceAccountName: {{ printf "%s-testkube-job" .TestName }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: 180
