apiVersion: vault.banzaicloud.com/v1alpha1
kind: Vault
metadata:
  name: vault-test
  namespace: vault
spec:
  size: 1
  image: hashicorp/vault:1.15.1
  bankVaultsImage: ghcr.io/banzaicloud/bank-vaults:1.19.0
  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault-test
  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      inmem: { }
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_disable: true
    ui: true
    log_level: debug
  # See: https://bank-vaults.dev/docs/cli-tool/#example-external-vault-configuration
  externalConfig:
    policies:
      - name: allow_secrets
        rules: |
          path "secret/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
    secrets:
      - path: secret
        type: kv
        description: General secrets.
        options:
          version: 2
    auth:
      - type: kubernetes
        roles:
          # Default role assumed by workloads by default
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: [ "*" ]
            bound_service_account_namespaces: [ "default" ]
            policies: [ "allow_secrets" ]
            ttl: 10m
      - type: userpass
        users:
          - username: admin
            password: admin
            token_policies: allow_secrets
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vault-test
  namespace: vault
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-test
  namespace: vault
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "*" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "update", "patch" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-test
  namespace: vault
roleRef:
  kind: Role
  name: vault-test
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: vault-test
---
# This binding allows the deployed Vault instance to authenticate clients
# through Kubernetes ServiceAccounts (if configured so).
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-test
    namespace: vault
